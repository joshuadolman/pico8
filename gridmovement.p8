pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--
-->8
--init

function _init()
	plyr_init()
end
-->8
--update

function _update60()
	plyr_move()
	inputstack_update()
end

inputstack={}

function inputstack_update()
	if btn(0) then
		if not inputstack_contains("left") then
			inputstack[#inputstack+1]="left"
		end
	else
		if inputstack_contains("left") then
			inputstack_delete("left")
		end
	end
	if btn(1) then
		if not inputstack_contains("right") then
			inputstack[#inputstack+1]="right"
		end
	else
		if inputstack_contains("right") then
			inputstack_delete("right")
		end
	end
	if btn(2) then
		if not inputstack_contains("up") then
			inputstack[#inputstack+1]="up"
		end
	else
		if inputstack_contains("up") then
			inputstack_delete("up")
		end
	end
	if btn(3) then
		if not inputstack_contains("down") then
			inputstack[#inputstack+1]="down"
		end
	else
		if inputstack_contains("down") then
			inputstack_delete("down")
		end
	end
end

function inputstack_contains(_v)
	if inputstack then
		for _i=1,#inputstack do
			if inputstack[_i]==_v then
				return true
			end
		end
	end
	
	return false
end

function inputstack_delete(_v)
	if inputstack then
		for _i=1,#inputstack do
			if inputstack[_i]==_v then
				del(inputstack,inputstack[_i])
			end
		end
	end
end
-->8
--draw

function _draw()
	cls(1)
	plyr_draw()
	
	if debug!=nil then print(debug) end
	local _s="inputstack: "
	if inputstack then
		for _i=1,#inputstack do
			_s=_s..inputstack[_i]..", "
		end
	end
	print(_s,1,40,7)
	print(#inputstack,1,47,7)
end
-->8
--

plyr={
	x=1,
	y=1,
	desx=nil,
	desy=nil,
	sprx=nil,
	spry=nil,
	
	moving=false
}

function plyr_init()
	plyr.desx=plyr.x
	plyr.desy=plyr.y
	plyr.sprx=plyr.x*16
	plyr.spry=plyr.y*16
end

function plyr_move()
	if plyr.sprx!=plyr.desx*16 or
	plyr.spry!=plyr.desy*16 then
 		if plyr.sprx>plyr.desx*16 then
			plyr.sprx-=2
		end
		if plyr.sprx<plyr.desx*16 then
			plyr.sprx+=2
		end
		if plyr.spry>plyr.desy*16 then
			plyr.spry-=2
		end
		if plyr.spry<plyr.desy*16 then
			plyr.spry+=2
		end
 else
 --end
	--if plyr.sprx!=plyr.desx*16 or plyr.spry!=plyr.desy*16 then
		if btn(0) then
 		plyr.desx-=1
 	end
 	if btn(1) then
 		plyr.desx+=1
 	end
 	if btn(2) then
 		plyr.desy-=1
 	end
 	if btn(3) then
 		plyr.desy+=1
 	end
	end
end

function plyr_draw()
	spr(1,plyr.sprx,plyr.spry,2,2)
end
-->8
--

-->8
--
-->8
--

debug=nil
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000033333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000003bbbbbbbbbbbb3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000033333333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000002020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000002020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
